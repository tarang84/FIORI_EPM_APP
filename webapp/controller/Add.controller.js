sap.ui.define([
	"sap/ui/core/mvc/Controller",
	"sap/m/MessageToast",
	"sap/m/MessageBox",
	"sap/ui/model/Filter",
	"sap/ui/model/FilterOperator"
], function(Controller, MsgToast, MsgBox, Filter, FilterOperator) {
	"use strict";
	return Controller.extend("pcs.hr.payroll.controller.Add", {
		// *
		//  * Called when a controller is instantiated and its View controls (if available) are already created.
		//  * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		//  * @memberOf tcs.hr.payroll.view.Add
		onInit: function() {
			var oModel = new sap.ui.model.json.JSONModel();
			oModel.setData({
				"productData": {
					"PRODUCT_ID": "",
					"TYPE_CODE": "PR",
					"CATEGORY": "Notebooks",
					"NAME": "",
					"DESCRIPTION": "",
					"SUPPLIER_ID": "",
					"PRICE": "",
					"CURRENCY_CODE": "",
					"PRODUCT_PIC_URL": "/sap/public/bc/NWDEMO_MODEL/IMAGES/",
					"HM_MIME": ""
				}
			});
			this.getView().setModel(oModel, "addN");
		},
		inpfield: null,
		oFragFilter: null,
		onF4S: function(oEvent) {
			this.inpfield = oEvent.getSource();
			if (!this.oFragFilter) {
				this.oFragFilter = new sap.ui.xmlfragment("idSuppPop", "pcs.hr.payroll.fragments.popup", this);
				// Add as dependant to give access of model
				this.getView().addDependent(this.oFragFilter);
				this.oFragFilter.setMultiSelect(false);
				this.oFragFilter.bindAggregation("items", {
					path: "/SupplierSet",
					template: new sap.m.DisplayListItem({
						label: "{BP_ID}",
						value: "{COMPANY_NAME}"
					})
				});
			}
			this.oFragFilter.open();
		},
		onItemSelect: function(oEvent) {
			var oSelItem = oEvent.getParameter("selectedItem").getLabel();
			this.inpfield.setValue(oSelItem);
		},
		onSearchn: function(oEvent) {
			var SearchVal = oEvent.getParameter("value");
			var oFilterNam = new Filter("COMPANY_NAME", FilterOperator.Contains, SearchVal);
			this.oFragFilter.getBinding("items").filter(oFilterNam);
		},
		onDelete: function(oEvent) {
			var oModel = this.getView().getModel("addN");
			var ProductId = oModel.getProperty("/productData/PRODUCT_ID");
			var oDataModel = this.getView().getModel();
			oDataModel.remove("/ProductSet('" + ProductId + "')", {
				success: function(data) {
					MsgToast.show("It is deleted Successfully");
				},
				error: function(oErr) {
					MsgBox.error("There is error, Item may be already deleted");
				}
			});
		},
		//* Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
		//* (NOT before the first rendering! onInit() is used for that one!).
		//* @memberOf tcs.hr.payroll.view.Add
		//	onBeforeRendering: function() {
		//
		//	},
		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf tcs.hr.payroll.view.Add
		 */
		//	onAfterRendering: function() {
		//
		//	},
		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf tcs.hr.payroll.view.Add
		 */
		//	onExit: function() {
		//
		//	}
		/**
		 *@memberOf tcs.hr.payroll.controller.Add
		 */
		onSave: function(oEvent) {
			var payLoad = this.getView().getModel("addN").getProperty("/productData");
			var oDataModel = this.getView().getModel();
			payLoad.PRODUCT_PIC_URL = payLoad.PRODUCT_PIC_URL + payLoad.PRODUCT_ID + ".jpg";
			oDataModel.create("/ProductSet", payLoad, {
				success: function(data) {
					MsgToast.show("Data is posted successfully");
				},
				error: function(oErr) {
					MsgBox.error(JSON.parse(oErr.responseText).error.innererror.errordetails[0].message);
				}
			});
		},
		/**
		 *@memberOf tcs.hr.payroll.controller.Add
		 */
		onSubmit: function(oEvent) {
			//This code was generated by the layout editor.
			var pid = oEvent.getSource().getValue();
			var oDataModel = this.getView().getModel();
			var that = this;
			oDataModel.read("/ProductSet('" + pid + "')", {
				success: function(data) {
					that.getView().getModel("addN").setProperty("/productData", data);
				},
				error: function(oErr) {}
			});
		},
		/**
		 *@memberOf tcs.hr.payroll.controller.Add
		 */
		onExpensive: function(oEvent) {
			//This code was generated by the layout editor.
			//Step 1: Obtain the object of Odata Model 
			 var oDataModel = this.getView().getModel();
			//Step 2: Call Function Import
			var that = this;
			 oDataModel.callFunction("/GetMostExpensive", {
			 	success: function(data){
			     //Step 3: Call back to handle incoming data later	
			     that.getView().getModel("addN").setProperty("/productData", data);
			 	},
			 	error: function(oErr){
			 	//Step 4: Error call back handling	
			 	 MsgBox.error(JSON.parse(oErr.responseText).error.innererror.errordetails[0].message);
			 	}
			 });
		
		}
	});
});